library(survival)
set.seed(2024)

# time grid for all survival estimates
tt = seq(0, 200, by = 0.1)
nt = length(tt)

# True Underlying Curve

## 1. Empirical ##

### Generate Data 
N = 10^6
  
# baseline covariates
treat = sample(c(0, 1), size = N, replace = T, prob = c(0.5, 0.5)) # treatment A (treat = 0)
                                                                   # or B (treat = 1)
age = rnorm(N, 40, 10) # age
ageZ = (rnorm(N, 40, 10) - 40)/10 # rescaling: standardized age
  
# event and censoring times
lx = 0.05; beta = c(0.5, 0.8) # moderate dependency
lc = 0.02; phi = c(1, 1.5) # strong dependency

u1 = runif(N, 0, 1)
u2 = runif(N, 0, 1)

x = (-log(u1))/(lx * exp(beta[1]*treat + beta[2]*ageZ))
c = (-log(u2))/(lc * exp(phi[1]*treat + phi[2]*ageZ))

t = pmin(x, c) # observed time
d = as.numeric(x <= c) # event indicator 

true_data = data.frame(id = 1:N, X = x, C = c, Tobs = t, d = d, 
                       treatment = treat, age = age, ageZ = ageZ)

# true curve: all patients have experienced the event of interest  
true_fit = survfit(Surv(X, rep(1, nrow(true_data))) ~ 1, true_data) 
true_surv_resamp = summary(true_fit, times = tt, extend = TRUE)$surv

plot(tt, true_surv_resamp, type = "s", lwd = 2, las = 1, bty = "l",
     xlab = "Time", ylab = "Survival Probability",
     main = "True Survival Curve (empirical)")

## 2. Theoretical - Integrate over covariate distribution ##

integrand = function(t, z1, z2){
  exp(-lx*t*exp(beta[1]*z1 + beta[2]*z2))*dnorm(z2)
}

true_surv_integr = numeric(nt)
for (i in 1:nt){
  true_surv_integr[i] = 0.5*(integrate(integrand, t = tt[i], z1 = 1, lower = -5, upper = 5)$value + 
                               integrate(integrand, t = tt[i], z1 = 0, lower = -5, upper = 5)$value)
}

plot(tt, true_surv_integr, type = "s", lwd = 2, las = 1, bty = "l", 
     lty = 2, col = "aquamarine2",
     xlab = "Time", ylab = "Survival Probability",
     main = "True Survival Curve (theoretical)")

## 3. Overall Comparisons: Empirical vs Theoretical approach ##

plot(tt, true_surv_resamp, type = "s", lwd = 3, las = 1, bty = "l",
     xlab = "Time", ylab = "Survival Probability",
     main = "True Underlying Survival Curve")
lines(tt, true_surv_integr, type = "s", lty = 2, lwd = 2, col = "aquamarine2")
legend("topright", c("Empirical", "Integration"),
        bty = "n", lwd = c(3, 2), lty = c(1, 2),
        col = c("black", "aquamarine2"))

c(mean(abs(true_surv_integr - true_surv_resamp)),
  var(true_surv_integr - true_surv_resamp),
  sqrt(mean((true_surv_integr - true_surv_resamp)^2)),
  geiger:::.area.between.curves(tt, true_surv_resamp, true_surv_integr, 
                                xrange = c(0, max(tt))))
